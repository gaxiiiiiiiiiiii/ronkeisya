●言語
論理結合子  ∧ ∨ ⊃ ¬
量化記号    ∀ ∃
対象変数    x y z
対象定数    c d
関数記号    f g
述語記号    P Q

(*) 対象変数、関数記号、述語記号は言語ごとに選び方が変わる
(*) 関数記号、述語記号は引数の数を指定する必要がある

以下、言語ℒが与えられているものとする。

● ℒ上の項
t := x | c | f(t₁,...,tₘ)
xは対称変数
cは対称定数
fはm変数の関数記号

● ℒ上の論理式
A B := P(t₁,...,tₙ) | A ∧ B | A ∨ B | A ⊃ B | ¬ A | ∀xA | ∃xA
Pはn変数の術後記号
tiはそれぞれ項
xは対称変数
P(t₁,...,tₙ)の形式を、原始論理式と呼ぶ

●束縛変数と自由変数
●束縛された出現と自由な出現
略

●閉じた論理式
論理式Aが自由変数を一つも含まないとき、Aを閉じた論理式と呼ぶ
論理式Aの自由変数がx₁,...,xₘのとき、∀x1,...,∀xₘAを閉包と呼ぶ
  ex) xとyを自由変数に持つ論理式
        x + y = y + x
      の閉包は、
        ∀x∀y(x + y = y + x)
  -> 自由変数を持つ命題を全称命題と見做したいお気持ち？



●項の代入
Aにおける変数xの自由な出現を項tに置き換えたものをA[t/x]と書く
補足回避代入に注意
(⃧∀zA)[t/x]
  := A            (xがAの自由変数でないとき)
  := ∀z(A[t/x])   (xがAの自由変数で、tにzが現れないとき)
  := A[u/z][t/x]　（xがAの自由変数で、tにzが現れるとき）

●部分論理式
基本的には命題論理と同じ
∀xAの部分論理式は、任意の項tについてB[t/x]
∃xAの部分論理式は、任意の項tについてB[t/x]

●同時代入
(A[t/x])[s/y]はA[t/x][s/y]と書く
一方、Aの自由変数x₁,..,xₘを項s₁,...,Sₘに置き換えたものを
A[s₁/x₁,...,sₘ/xₘ]と書き、この操作を同時代入と呼ぶ

A[t/x][s/y] = A[t/x, s/y]は成り立つとは限らない
なぜなら、最小に代入されたtに、後からの代入の対称となるyが含まれ得るから

以下は成り立つ
A[t/x][s/y] = A[t[s/y]/x, s/y]  (x ≠ y)
            = A[t[s/x]/x]       (x = y)











